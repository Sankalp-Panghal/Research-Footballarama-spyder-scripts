# -*- coding: utf-8 -*-
"""
Created on Wed Mar  3 10:32:00 2021

Visualkise the bounding box created by ground_truth_file generated by me

@author: panghals
"""

import cv2
import imutils
import os

def resize(im,h):
    return imutils.resize(im,height = h)

def find_start_no(loc):
    files = sorted([int(x.split('.')[0].split('_')[1]) for x in os.listdir(loc) if 'png' in x])
    return (files[0], len(files))

def extract_xywh(location_of_yolo_truth_file):

    try:
        with open(location_of_yolo_truth_file) as f:
            line = f.readline()
            if line:
                class_obj, x_cen, y_cen, w, h = [float(x) for x in line.split()]
                w = int(w*cols); h = int(h*rows); x = int(x_cen*cols - (w/2)) ;y = int(y_cen*rows - (h/2)) ;
            else:
                x,y,w,h = None, None, None, None
            #print("frame {} yolo read ----> class {},  x_cen {},  y_cen {},  w {},  h {}".format(frame_no, class_obj, x_cen, y_cen, w, h))

    except:
        print("Cannot open file --> {}".format(location_of_yolo_truth_file))
        x,y,w,h = None, None, None, None

    return (x,y,w,h)


#-------------------------------------------SPECIFY MANUALLY---------------------------------------------------------
location = "D:\\Sequence Data Feb\\Seq 5 shelly 020\\9\\"
#------------------------------------------------------------------------------------------------------------------

yolo_ground_truth_loc = location + "yolo format ball\\"
img_loc = location + "1080\\"
start_frame_no = find_start_no(img_loc)[0]

try:
    print("Shapey from try block runned!")
    shapey = cv2.imread(img_loc+"frame_{}.png".format(start_frame_no)).shape
except:
    print("Shapey from except block")
    shapey = (720, 1365, 3)
print(shapey)
rows,cols,dims = shapey



for frame_no in range(start_frame_no, start_frame_no+500):
    im = cv2.imread(img_loc+"frame_{}.png".format(frame_no))
    #cv2.imshow("preview",im)
    #cv2.waitKey(0)

    x,y,w,h = extract_xywh(yolo_ground_truth_loc +"frame_{}.txt".format(frame_no))
    print("frame {} -----> x {}    y {}    w {}    h {}".format(frame_no,x,y,w,h))


    if x!=None and x>=0 and x+w<shapey[1] and y>=0 and y+h<shapey[0]:
        im = cv2.rectangle(im, (x,y) , (x+w,y+h) , (0,0,255) , 1)
    else:
        print("Out of bounds - frame {}".format(frame_no))


    cv2.imshow("Frame",im)
    key = cv2.waitKey(1) & 0xFF
    if key == ord('q'):
        break

cv2.destroyAllWindows()

